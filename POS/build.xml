<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="ElectricSheep" default="build">

	<!-- Definitions of variables -->
	<property file="build.properties"/>
	<property name="build.dir" value="${basedir}/build"/>
	<property name="build.classes.dir" value="${build.dir}/classes"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="dist.dir" value="${basedir}/dist"/>
	<property name="conf.dir" value="${basedir}/etc"/>
	<property name="doc.dir" value="${build.dir}/doc"/>
	<property name="test.reports.dir" value="${build.dir}/reports/"/>
	<property name="jar.dir" value="${build.dir}/jar"/>
	<property name="resources.dir" value="${basedir}/resources"/>
	
	<property name="lib.dir" value="${basedir}/lib"/>

	<!-- database variables -->
	<property name="data.dir"	value="${basedir}/data"/>
	<property name="db.file"	value="${data.dir}/POSdb"/>
	<property name="db.alias"	value="POS"/>
	<property name="db.url" 	value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"   value="${lib.dir}/hibernate"/>
	
	<!-- Classpaths -->
	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
        <fileset dir="${lib.hibernate.dir}">
             <include name="*.jar"/>
        </fileset>
	</path>

	<path id="run.classpath">
	        <pathelement location="${build.classes.dir}"/>
	        <!-- configuration -->
	        <pathelement location="${conf.dir}"/>
	        <fileset dir="${lib.dir}">
	            <include name="*.jar"/>
	        </fileset>
	        <fileset dir="${lib.hibernate.dir}">
	             <include name="*.jar"/>
	        </fileset>
	</path>
	
	<target name="dbmanager" description="Start the HSQLDB manager">
	        <java
	            classname="org.hsqldb.util.DatabaseManagerSwing"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="--user sa --url ${db.url}" />
	        </java>
	    </target>

	    <target name="startdb" description="Start the HSQLDB with the default params">
	        <java
	            classname="org.hsqldb.Server"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
	        </java>
	</target>
	
	<!-- Clean -->
		<target name="clean" description="Clean up build system results">
			<delete dir="${build.dir}"/>
		</target>

	<!-- Run -->
	<target name="run" depends="build" description="Run the application from class">
		<java 
			classname="ee.ut.math.tvt.electricsheep.Intro" 
			classpathref="run.classpath" 
			fork="yes">
			<!--
			<jvmarg value="-Xdebug"/>
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044"/> -->
		</java>
	</target>
	
	<!-- jrun -->
	<target name="jrun" depends="dist" description="Run the application from jar">
		<java jar="${jar.dir}/ElectricSheep.jar" classpathref="run.classpath" fork="yes" />
	</target>
	
	<!-- runc -->
	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.electricsheep.Intro" classpathref="run.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>
	
	<!-- Build -->
	<target name="build" depends="clean" description="Build the system">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<copy file="${basedir}/version.properties" todir="${build.classes.dir}"/>
		<copy file="${basedir}/application.properties" todir="${build.classes.dir}"/>
		<copy file="${basedir}/conf/hibernate.cfg.xml" todir="${build.classes.dir}"/>
		<copy todir="${build.classes.dir}">
			<fileset dir="${resources.dir}"/>
		</copy>
		<javac
            srcdir="${src.dir}"
            destdir="${build.classes.dir}"
            debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.7"
            source="1.7"
			includeantruntime="false">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>
	
	<!-- Dist -->
	<target name="dist" depends="build" description="Create the stuff">
		<mkdir dir="${jar.dir}"/>
		<loadproperties srcFile="version.properties"/>
		<propertyfile file="version.properties">
			<entry key="build.revision.number" type="int" operation="+" value="1"/>
			<entry key="build.number" type="string" operation="=" value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
		</propertyfile>
		<jar destfile="${jar.dir}/ElectricSheep.jar" update="True">
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.electricsheep.Intro"/>
			</manifest>
			<fileset dir="${build.classes.dir}"/>
			<fileset dir="${resources.dir}"/>
			<fileset file="${basedir}/version.properties"/>
			<fileset file="${basedir}/application.properties"/>
			<fileset dir="${basedir}/etc"/>
			<zipgroupfileset dir="${basedir}/lib">
				<include name="*.jar"/>
			</zipgroupfileset>
		</jar>
	</target>
	
	<!-- Commit -->
	<target name="git_commit">
		<input
			message="Please enter the commit comment:"
			addproperty="commit.comment"
			defaultvalue="No comment."
		/>
		<input 
			message="Please enter your github username:"
			addproperty="commit.username"
		/>
		<input
			message="Please enter your github password:"
			addproperty="commit.password"
		/>
		<exec executable="cmd">
			<arg value='/c'/>
			<arg value='git add -A'/>
		</exec>
		<exec executable="cmd">
			<arg value='/c'/>
			<arg value='git commit -m "${commit.comment}"'/>
		</exec>
		<exec executable="cmd">
			<arg value='/c'/>
			<arg value='git push https://${commit.username}:${commit.password}@github.com/lauri0/POS.git'/>
		</exec>
	</target>
	
	<!-- Tag -->
	<target name="git_tag">
		<input
			message="Please enter the tag name:"
			addproperty="tag.name"
		/>
		<input
			message="Please enter the tag comment:"
			addproperty="tag.comment"
		/>
		<input 
			message="Please enter your github username:"
			addproperty="tag.username"
		/>
		<input
			message="Please enter your github password:"
			addproperty="tag.password"
		/>
		<exec executable="cmd">
			<arg value='/c'/>
			<arg value='git tag -a ${tag.name} -m "${tag.comment}"'/>
		</exec>
		<exec executable="cmd">
			<arg value='/c'/>
			<arg value='git push https://${tag.username}:${tag.password}@github.com/lauri0/POS.git --tags'/>
		</exec>
	</target>
</project>

